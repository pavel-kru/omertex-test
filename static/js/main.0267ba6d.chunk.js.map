{"version":3,"sources":["components/Fieldset.module.scss","UI/Input.module.scss","containers/Form.module.scss","UI/Button.module.scss","UI/Input.js","UI/Button.js","components/Fieldset.js","containers/Form.js","utils/check-validity.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Input","props","inputStyle","styles","className","error","errorInput","required","input","onChange","onBlur","htmlFor","id","label","type","React","memo","Button","disabled","onClick","button","join","children","Fieldset","name","form","enableWifi","wirelessSpecialSettings","wirelessDisabled","Wireless","enable","disabledStyle","disabledOpacity","fieldsetIpDisabledStyle","ip","auto","fieldsetDnsDisabledStyle","dns","path","idx","checked","select","placeholder","value","networkName","event","preventDefault","inputText","enableKey","securityKey","fieldset","address","errors","subnetMask","defaultGateway","preferedServer","alternativeServer","formInitialState","Ethernet","formReducer","state","action","console","log","JSON","stringify","updatePath","split","length","key","subPath","param","testIsValid","test","ipArray","trim","i","ipValidation","Form","useReducer","dispatchForm","inputChangeHandler","useCallback","target","getAttribute","formIsValid","formCheckValidityHandler","obj","onSubmit","buttons","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0267ba6d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldset\":\"Fieldset_fieldset__1zW3T\",\"enableWifi\":\"Fieldset_enableWifi__3ezYc\",\"select\":\"Fieldset_select__krh-E\",\"inputText\":\"Fieldset_inputText__1cFZc\",\"disabledOpacity\":\"Fieldset_disabledOpacity__2gQNV\",\"bump\":\"Fieldset_bump__3PP6R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2ivjD\",\"error\":\"Input_error__3Yvdw\",\"errorInput\":\"Input_errorInput__1r_7r\",\"bump\":\"Input_bump__kdiai\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__65y27\",\"fieldset-container\":\"Form_fieldset-container__3R5gc\",\"buttons\":\"Form_buttons__1SYLS\",\"bump\":\"Form_bump__2t2fh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2Mwyj\",\"submit\":\"Button_submit__2qPvg\",\"cancel\":\"Button_cancel__3ljsL\",\"bump\":\"Button_bump__DesXV\",\"refresh\":\"Button_refresh__2xnfu\"};","import React from \"react\";\nimport styles from \"./Input.module.scss\";\n\nconst Input = (props) => {\n  let inputStyle = `${styles.Input} ${props.className} ${\n    props.error ? styles.errorInput : null\n  }`;\n\n  let required = props.required && <span> *</span>;\n\n  let input = (\n    <>\n      <input onChange={props.onChange} onBlur={props.onBlur} {...props} />\n      <label htmlFor={props.id}>\n        {props.label}\n        {required}\n      </label>\n    </>\n  );\n\n  if (props.type === \"select\") {\n    input = (\n      <>\n        <p>{props.label}</p>\n        {required}\n        <select></select>\n      </>\n    );\n  }\n  return (\n    <div className={inputStyle}>\n      {input}\n      {props.error && <span className={styles.error}>{props.error}</span>}\n    </div>\n  );\n};\n\nexport default React.memo(Input);\n","import React from \"react\";\n\nimport styles from \"./Button.module.scss\";\n\nconst Button = (props) => {\n  return (\n    <button\n      disabled={props.disabled}\n      onClick={props.onClick}\n      className={[styles.button, styles[props.type]].join(\" \")}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import Input from '../UI/Input';\nimport styles from './Fieldset.module.scss';\nimport Button from '../UI/Button';\n\nconst Fieldset = ({ name, form, onChange }) => {\n  let enableWifi = null;\n  let wirelessSpecialSettings = null;\n  let wirelessDisabled = name === 'Wireless' && !form.Wireless.enable;\n  let disabledStyle = wirelessDisabled ? styles.disabledOpacity : null;\n  let fieldsetIpDisabledStyle = form[name].ip.auto\n    ? styles.disabledOpacity\n    : null;\n  let fieldsetDnsDisabledStyle = form[name].dns.auto\n    ? styles.disabledOpacity\n    : null;\n\n  if (name === 'Wireless') {\n    enableWifi = (\n      <Input\n        label='Enable wifi:'\n        path={name}\n        idx={name + '.enable'}\n        id={`${name}.enable`}\n        type='checkbox'\n        className={styles.enableWifi}\n        onChange={onChange}\n        checked={form.Wireless.enable}\n      />\n    );\n\n    wirelessSpecialSettings = (\n      <>\n        <div className={`${styles.select} ${disabledStyle}`}>\n          <Input\n            label='Wireless Network Name:'\n            idx={name + '.networkName'}\n            name='networkName'\n            type='select'\n            placeholder='Please select'\n            value={form.Wireless.networkName}\n            onChange={onChange}\n            required\n            disabled={wirelessDisabled}\n          />\n          <Button\n            type='refresh'\n            disabled={!form.Wireless.enable}\n            onClick={(event) => event.preventDefault()}\n            disabled={wirelessDisabled}\n          />\n        </div>\n        <Input\n          label='Enable Wireless Security:'\n          idx={name + '.enableKey'}\n          id={`${name}.security.enable`}\n          className={`${styles.inputText} ${disabledStyle}`}\n          type='checkbox'\n          onChange={onChange}\n          checked={form.Wireless.enableKey}\n          disabled={wirelessDisabled}\n        />\n        <Input\n          label='Security Key:'\n          idx={name + '.securityKey'}\n          type='text'\n          disabled={!form.Wireless.enableKey}\n          className={`${styles.inputText} ${\n            !form.Wireless.enableKey ? styles.disabledOpacity : null\n          }`}\n          value={form.Wireless.securityKey}\n          onChange={onChange}\n          required\n          disabled={wirelessDisabled}\n        />\n      </>\n    );\n  }\n\n  return (\n    <fieldset className={styles.fieldset}>\n      <legend>\n        {name} Settings:\n        {enableWifi}\n      </legend>\n      {wirelessSpecialSettings}\n      <Input\n        label='Obtain an IP address automatically (DHCP/BootP)'\n        idx={name + '.ip.auto'}\n        id={`${name}.ip.auto`}\n        type='radio'\n        className={disabledStyle}\n        name={`${name}.ip`}\n        checked={form[name].ip.auto}\n        onChange={onChange}\n        disabled={wirelessDisabled}\n      />\n      <Input\n        label='Use the following IP address:'\n        idx={name + '.ip.auto'}\n        id={`${name}.ip.manually`}\n        className={disabledStyle}\n        type='radio'\n        name={`${name}.ip`}\n        checked={!form[name].ip.auto}\n        onChange={onChange}\n        disabled={wirelessDisabled}\n      />\n      <fieldset\n        disabled={form[name].ip.auto}\n        className={fieldsetIpDisabledStyle}\n      >\n        <Input\n          label='IP address:'\n          idx={name + '.ip.address'}\n          id={`${name}.ip.value`}\n          type='text'\n          className={styles.inputText}\n          value={form[name].ip.address}\n          error={form.errors[name].ip.address}\n          onChange={onChange}\n          required\n        />\n        <Input\n          label='Subnet Mask:'\n          idx={name + '.ip.subnetMask'}\n          id={`${name}.subnet`}\n          type='text'\n          className={styles.inputText}\n          value={form[name].ip.subnetMask}\n          error={form.errors[name].ip.subnetMask}\n          onChange={onChange}\n          required\n        />\n        <Input\n          label='Deafault Gateway:'\n          idx={name + '.ip.defaultGateway'}\n          id={`${name}.defaultGateway`}\n          type='text'\n          className={styles.inputText}\n          value={form[name].ip.defaultGateway}\n          onChange={onChange}\n        />\n      </fieldset>\n      <Input\n        label='Obtain DNS service address automatically'\n        idx={name + '.dns.auto'}\n        id={`${name}.dns.address.auto`}\n        className={disabledStyle}\n        type='radio'\n        name={`${name}.dns.address`}\n        checked={form[name].dns.auto}\n        onChange={onChange}\n        disabled={wirelessDisabled}\n      />\n      <Input\n        label='Use the following DNS server address:'\n        idx={name + '.dns.auto'}\n        id={`${name}.dns.address.manually`}\n        className={disabledStyle}\n        checked={!form[name].dns.auto}\n        type='radio'\n        name={`${name}.dns.address`}\n        onChange={onChange}\n        disabled={wirelessDisabled}\n      />\n      <fieldset\n        disabled={form[name].dns.auto}\n        className={fieldsetDnsDisabledStyle}\n      >\n        <Input\n          label='Prefered DNS server:'\n          idx={name + '.dns.preferedServer'}\n          type='text'\n          className={styles.inputText}\n          value={form[name].dns.preferedServer}\n          error={form.errors[name].dns.preferedServer}\n          onChange={onChange}\n          required\n        />\n        <Input\n          label='Alternative DNS server:'\n          idx={name + '.dns.alternativeServer'}\n          type='text'\n          className={styles.inputText}\n          onChange={onChange}\n          value={form[name].dns.alternativeServer}\n          error={form.errors[name].dns.alternativeServer}\n        />\n      </fieldset>\n    </fieldset>\n  );\n};\n\nexport default Fieldset;\n","import React, { useReducer, useCallback } from 'react';\n\nimport Fieldset from '../components/Fieldset';\nimport Button from '../UI/Button';\nimport { ipValidation } from '../utils/check-validity';\nimport styles from './Form.module.scss';\n\nconst formInitialState = {\n  Ethernet: {\n    ip: {\n      auto: true,\n      address: '',\n      subnetMask: '',\n      defaultGateway: '',\n    },\n    dns: {\n      auto: true,\n      preferedServer: '',\n      alternativeServer: '',\n    },\n  },\n  Wireless: {\n    enable: false,\n    networkName: '',\n    enableKey: false,\n    securityKey: '',\n    ip: {\n      auto: true,\n      address: '',\n      subnetMask: '',\n      defaultGateway: '',\n    },\n    dns: {\n      auto: true,\n      preferedServer: '',\n      alternativeServer: '',\n    },\n  },\n  errors: {\n    Ethernet: { dns: {}, ip: {} },\n    Wireless: { dns: {}, ip: {} },\n  },\n};\n\nconst formReducer = (state, action) => {\n  const { name, type, value } = action;\n\n  if (type === 'SUBMIT') {\n    console.log(\n      JSON.stringify({\n        Ethernet: { ...state.Ethernet },\n        Wireless: { ...state.Wireless },\n      })\n    );\n    return { ...formInitialState };\n  }\n  if (type === 'CANCEL') {\n    return { ...formInitialState };\n  }\n\n  const updatePath = name && name.split('.');\n\n  if (updatePath.length === 2 && (type === 'checkbox' || type === 'radio')) {\n    const [path, key] = updatePath;\n    if (key === 'enable' && state.Wireless.enable) {\n      return {\n        ...state,\n        Wireless: {\n          ...formInitialState.Wireless,\n        },\n        errors: {\n          ...state.errors,\n          Wireless: formInitialState.errors.Wireless,\n        },\n      };\n    }\n\n    if (key === 'enableKey' && state.Wireless.enableKey) {\n      return {\n        ...state,\n        Wireless: {\n          ...state.Wireless,\n          enableKey: false,\n          securityKey: formInitialState.Wireless.securityKey,\n        },\n      };\n    }\n    return {\n      ...state,\n      [path]: {\n        ...state[path],\n        [key]: !state[path][key],\n      },\n    };\n  }\n\n  if (updatePath.length === 3 && (type === 'checkbox' || type === 'radio')) {\n    const [path, subPath, key] = updatePath;\n    if (!state[path][subPath][key]) {\n      return {\n        ...state,\n        [path]: {\n          ...state[path],\n          [subPath]: {\n            ...formInitialState[path][subPath],\n          },\n        },\n        errors: {\n          ...state.errors,\n          [path]: {\n            ...state.errors[path],\n            [subPath]: {},\n          },\n        },\n      };\n    }\n\n    return {\n      ...state,\n      [path]: {\n        ...state[path],\n        [subPath]: {\n          ...state[path][subPath],\n          [key]: !state[path][subPath][key],\n        },\n      },\n    };\n  }\n\n  if (updatePath.length === 2) {\n    const [path, key] = updatePath;\n    return {\n      ...state,\n      [path]: {\n        ...state[path],\n        [key]: value,\n      },\n    };\n  }\n  if (updatePath.length === 3) {\n    const [path, subPath, key] = updatePath;\n    return {\n      ...state,\n      [path]: {\n        ...state[path],\n        [subPath]: {\n          ...state[path][subPath],\n          [key]: value,\n        },\n      },\n      errors: {\n        ...state.errors,\n        [path]: {\n          ...state.errors[path],\n          [subPath]: {\n            ...state.errors[path][subPath],\n            [key]: ipValidation(value, key),\n          },\n        },\n      },\n    };\n  }\n  return formInitialState;\n};\n\nfunction Form() {\n  const [form, dispatchForm] = useReducer(formReducer, formInitialState);\n\n  const inputChangeHandler = useCallback(({ target }) => {\n    dispatchForm({\n      name: target.getAttribute('idx'),\n      type: target.type,\n      value: target.value,\n    });\n  }, []);\n\n  let formIsValid = true;\n\n  const formCheckValidityHandler = (obj) => {\n    for (let key in obj) {\n      if (typeof obj[key] === 'string') {\n        formIsValid = false;\n      }\n      if (typeof obj[key] === 'object') formCheckValidityHandler(obj[key]);\n    }\n  };\n\n  formCheckValidityHandler(form.errors);\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    // if (!formIsValid) return;\n    dispatchForm({ type: 'SUBMIT' });\n  };\n\n  const formCancelHandler = (event) => {\n    event.preventDefault();\n    dispatchForm({ type: 'CANCEL' });\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler} className={styles.form}>\n      <div className={styles['fieldset-container']}>\n        <Fieldset name='Ethernet' onChange={inputChangeHandler} form={form} />\n        <Fieldset name='Wireless' onChange={inputChangeHandler} form={form} />\n      </div>\n      <div className={styles.buttons}>\n        <Button type='submit' disabled={!formIsValid}>\n          Save\n        </Button>\n        <Button type='cancel' onClick={formCancelHandler}>\n          Cancel\n        </Button>\n      </div>\n    </form>\n  );\n}\n\nexport default Form;\n","export const ipValidation = (value, param) => {\n  const ipPattern = /^(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})$/;\n  let testIsValid = ipPattern.test(value);\n  let ipArray = value.split(\".\");\n  let key =\n    param === \"address\"\n      ? \" IP address\"\n      : param === \"subnetMask\"\n      ? \"Subnet Mask\"\n      : param === \"preferedServer\"\n      ? \"DNS server\"\n      : param === \"alternativeServer\"\n      ? \"DNS server\"\n      : null;\n  if (value.trim() === \"\")\n    return `Please, enter a${param === \"address\" ? \"n\" : null} ${key}.`;\n  if (!testIsValid) {\n    return `Invalid ${key}. Please, try again.`;\n  }\n  if (value === \"0.0.0.0\" || value === \"255.255.255.255\") {\n    return `This is a special ${key} and couldn't be used`;\n  } else {\n    for (let i = 0; i < 4; i++) {\n      if (ipArray[i] > 255 || ipArray[i] < 0) {\n        return `Invalid ${key}. Please, try again.`;\n      }\n    }\n  }\n};\n\n","import React from \"react\";\n\nimport Form from './containers/Form'\n\nfunction App() {\n  return <Form />\n}\n\nexport default React.memo(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}