{"version":3,"sources":["components/Fieldset.module.scss","UI/Input.module.scss","containers/Form.module.scss","UI/Button.module.scss","UI/Input.js","UI/Button.js","components/Fieldset.js","containers/Form.js","utils/check-validity.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Input","props","inputStyle","styles","className","error","errorInput","required","input","onChange","onBlur","htmlFor","id","label","type","React","memo","Button","disabled","onClick","button","join","children","Fieldset","name","form","enableWifi","wirelessSpecialSettings","wirelessDisabled","Wireless","enable","disabledStyle","disabledOpacity","fieldsetIpDisabledStyle","ip","auto","fieldsetDnsDisabledStyle","dns","path","idx","checked","select","placeholder","value","networkName","event","preventDefault","inputText","enableKey","securityKey","fieldset","address","errors","subnetMask","defaultGateway","preferedServer","alternativeServer","formInitialState","Ethernet","formReducer","state","action","console","log","JSON","stringify","updatePath","split","length","key","subPath","param","testIsValid","test","ipArray","trim","i","ipValidation","Form","useReducer","dispatchForm","inputChangeHandler","useCallback","target","getAttribute","formIsValid","formCheckValidityHandler","obj","onSubmit","buttons","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9bef0af.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldset\":\"Fieldset_fieldset__1G3wt\",\"enableWifi\":\"Fieldset_enableWifi__vo9c-\",\"select\":\"Fieldset_select__2Aoov\",\"inputText\":\"Fieldset_inputText__2mlUq\",\"disabledOpacity\":\"Fieldset_disabledOpacity___4GJ8\",\"bump\":\"Fieldset_bump__ce36t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3-jxO\",\"error\":\"Input_error__1y6i-\",\"errorInput\":\"Input_errorInput__2XpVX\",\"bump\":\"Input_bump__18Jh8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1aFSN\",\"fieldset-container\":\"Form_fieldset-container__s6p4A\",\"buttons\":\"Form_buttons__10dCK\",\"bump\":\"Form_bump__30ONE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__Exczl\",\"submit\":\"Button_submit__2ypPN\",\"cancel\":\"Button_cancel__3tNWn\",\"bump\":\"Button_bump__1_nv4\",\"refresh\":\"Button_refresh__3VDQB\"};","import React from \"react\";\r\nimport styles from \"./Input.module.scss\";\r\n\r\nconst Input = (props) => {\r\n  let inputStyle = `${styles.Input} ${props.className} ${\r\n    props.error ? styles.errorInput : null\r\n  }`;\r\n\r\n  let required = props.required && <span> *</span>;\r\n\r\n  let input = (\r\n    <>\r\n      <input onChange={props.onChange} onBlur={props.onBlur} {...props} />\r\n      <label htmlFor={props.id}>\r\n        {props.label}\r\n        {required}\r\n      </label>\r\n    </>\r\n  );\r\n\r\n  if (props.type === \"select\") {\r\n    input = (\r\n      <>\r\n        <p>{props.label}</p>\r\n        {required}\r\n        <select></select>\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <div className={inputStyle}>\r\n      {input}\r\n      {props.error && <span className={styles.error}>{props.error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Input);\r\n","import React from \"react\";\r\n\r\nimport styles from \"./Button.module.scss\";\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button\r\n      disabled={props.disabled}\r\n      onClick={props.onClick}\r\n      className={[styles.button, styles[props.type]].join(\" \")}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import Input from \"../UI/Input\";\r\nimport styles from \"./Fieldset.module.scss\";\r\nimport Button from \"../UI/Button\";\r\n\r\nconst Fieldset = ({ name, form, onChange }) => {\r\n  let enableWifi = null;\r\n  let wirelessSpecialSettings = null;\r\n  let wirelessDisabled = name === \"Wireless\" && !form.Wireless.enable;\r\n  let disabledStyle = wirelessDisabled ? styles.disabledOpacity : null;\r\n  let fieldsetIpDisabledStyle = form[name].ip.auto\r\n    ? styles.disabledOpacity\r\n    : null;\r\n  let fieldsetDnsDisabledStyle = form[name].dns.auto\r\n    ? styles.disabledOpacity\r\n    : null;\r\n\r\n  if (name === \"Wireless\") {\r\n    enableWifi = (\r\n      <Input\r\n        label=\"Enable wifi:\"\r\n        path={name}\r\n        idx={name + \".enable\"}\r\n        id={`${name}.enable`}\r\n        type=\"checkbox\"\r\n        className={styles.enableWifi}\r\n        onChange={onChange}\r\n        checked={form.Wireless.enable}\r\n      />\r\n    );\r\n\r\n    wirelessSpecialSettings = (\r\n      <>\r\n        <div className={`${styles.select} ${disabledStyle}`}>\r\n          <Input\r\n            label=\"Wireless Network Name:\"\r\n            idx={name + \".networkName\"}\r\n            name=\"networkName\"\r\n            type=\"select\"\r\n            placeholder=\"Please select\"\r\n            value={form.Wireless.networkName}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n          <Button\r\n            type=\"refresh\"\r\n            disabled={!form.Wireless.enable}\r\n            onClick={(event) => event.preventDefault()}\r\n          />\r\n        </div>\r\n        <Input\r\n          label=\"Enable Wireless Security:\"\r\n          idx={name + \".enableKey\"}\r\n          id={`${name}.security.enable`}\r\n          className={`${styles.inputText} ${disabledStyle}`}\r\n          type=\"checkbox\"\r\n          onChange={onChange}\r\n          checked={form.Wireless.enableKey}\r\n        />\r\n        <Input\r\n          label=\"Security Key:\"\r\n          idx={name + \".securityKey\"}\r\n          type=\"text\"\r\n          disabled={!form.Wireless.enableKey}\r\n          className={`${styles.inputText} ${\r\n            !form.Wireless.enableKey ? styles.disabledOpacity : null\r\n          }`}\r\n          value={form.Wireless.securityKey}\r\n          onChange={onChange}\r\n          required\r\n        />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <fieldset disabled={wirelessDisabled} className={styles.fieldset}>\r\n      <legend>\r\n        {name} Settings:\r\n        {enableWifi}\r\n      </legend>\r\n      {wirelessSpecialSettings}\r\n      <Input\r\n        label=\"Obtain an IP address automatically (DHCP/BootP)\"\r\n        idx={name + \".ip.auto\"}\r\n        id={`${name}.ip.auto`}\r\n        type=\"radio\"\r\n        className={disabledStyle}\r\n        name={`${name}.ip`}\r\n        checked={form[name].ip.auto}\r\n        onChange={onChange}\r\n      />\r\n      <Input\r\n        label=\"Use the following IP address:\"\r\n        idx={name + \".ip.auto\"}\r\n        id={`${name}.ip.manually`}\r\n        className={disabledStyle}\r\n        type=\"radio\"\r\n        name={`${name}.ip`}\r\n        checked={!form[name].ip.auto}\r\n        onChange={onChange}\r\n      />\r\n      <fieldset\r\n        disabled={form[name].ip.auto}\r\n        className={fieldsetIpDisabledStyle}\r\n      >\r\n        <Input\r\n          label=\"IP address:\"\r\n          idx={name + \".ip.address\"}\r\n          id={`${name}.ip.value`}\r\n          type=\"text\"\r\n          className={styles.inputText}\r\n          value={form[name].ip.address}\r\n          error={form.errors[name].ip.address}\r\n          onChange={onChange}\r\n          required\r\n        />\r\n        <Input\r\n          label=\"Subnet Mask:\"\r\n          idx={name + \".ip.subnetMask\"}\r\n          id={`${name}.subnet`}\r\n          type=\"text\"\r\n          className={styles.inputText}\r\n          value={form[name].ip.subnetMask}\r\n          error={form.errors[name].ip.subnetMask}\r\n          onChange={onChange}\r\n          required\r\n        />\r\n        <Input\r\n          label=\"Deafault Gateway:\"\r\n          idx={name + \".ip.defaultGateway\"}\r\n          id={`${name}.defaultGateway`}\r\n          type=\"text\"\r\n          className={styles.inputText}\r\n          value={form[name].ip.defaultGateway}\r\n          onChange={onChange}\r\n        />\r\n      </fieldset>\r\n      <Input\r\n        label=\"Obtain DNS service address automatically\"\r\n        idx={name + \".dns.auto\"}\r\n        id={`${name}.dns.address.auto`}\r\n        className={disabledStyle}\r\n        type=\"radio\"\r\n        name={`${name}.dns.address`}\r\n        checked={form[name].dns.auto}\r\n        onChange={onChange}\r\n      />\r\n      <Input\r\n        label=\"Use the following DNS server address:\"\r\n        idx={name + \".dns.auto\"}\r\n        id={`${name}.dns.address.manually`}\r\n        className={disabledStyle}\r\n        checked={!form[name].dns.auto}\r\n        type=\"radio\"\r\n        name={`${name}.dns.address`}\r\n        onChange={onChange}\r\n      />\r\n      <fieldset\r\n        disabled={form[name].dns.auto}\r\n        className={fieldsetDnsDisabledStyle}\r\n      >\r\n        <Input\r\n          label=\"Prefered DNS server:\"\r\n          idx={name + \".dns.preferedServer\"}\r\n          type=\"text\"\r\n          className={styles.inputText}\r\n          value={form[name].dns.preferedServer}\r\n          error={form.errors[name].dns.preferedServer}\r\n          onChange={onChange}\r\n          required\r\n        />\r\n        <Input\r\n          label=\"Alternative DNS server:\"\r\n          idx={name + \".dns.alternativeServer\"}\r\n          type=\"text\"\r\n          className={styles.inputText}\r\n          onChange={onChange}\r\n          value={form[name].dns.alternativeServer}\r\n          error={form.errors[name].dns.alternativeServer}\r\n        />\r\n      </fieldset>\r\n    </fieldset>\r\n  );\r\n};\r\n\r\nexport default Fieldset;\r\n","import React, { useReducer, useCallback } from \"react\";\r\n\r\nimport Fieldset from \"../components/Fieldset\";\r\nimport Button from \"../UI/Button\";\r\nimport { ipValidation } from \"../utils/check-validity\";\r\nimport styles from \"./Form.module.scss\";\r\n\r\nconst formInitialState = {\r\n  Ethernet: {\r\n    ip: {\r\n      auto: true,\r\n      address: \"\",\r\n      subnetMask: \"\",\r\n      defaultGateway: \"\",\r\n    },\r\n    dns: {\r\n      auto: true,\r\n      preferedServer: \"\",\r\n      alternativeServer: \"\",\r\n    },\r\n  },\r\n  Wireless: {\r\n    enable: false,\r\n    networkName: \"\",\r\n    enableKey: false,\r\n    securityKey: \"\",\r\n    ip: {\r\n      auto: true,\r\n      address: \"\",\r\n      subnetMask: \"\",\r\n      defaultGateway: \"\",\r\n    },\r\n    dns: {\r\n      auto: true,\r\n      preferedServer: \"\",\r\n      alternativeServer: \"\",\r\n    },\r\n  },\r\n  errors: {\r\n    Ethernet: { dns: {}, ip: {} },\r\n    Wireless: { dns: {}, ip: {} },\r\n  },\r\n};\r\n\r\nconst formReducer = (state, action) => {\r\n  const { name, type, value } = action;\r\n\r\n  if (type === \"SUBMIT\") {\r\n    console.log(\r\n      JSON.stringify({\r\n        Ethernet: { ...state.Ethernet },\r\n        Wireless: { ...state.Wireless },\r\n      })\r\n    );\r\n    return { ...formInitialState };\r\n  }\r\n  if (type === \"CANCEL\") {\r\n    return { ...formInitialState };\r\n  }\r\n\r\n  const updatePath = name && name.split(\".\");\r\n\r\n  if (updatePath.length === 2 && (type === \"checkbox\" || type === \"radio\")) {\r\n    const [path, key] = updatePath;\r\n    if (key === \"enable\" && state.Wireless.enable) {\r\n      return {\r\n        ...state,\r\n        Wireless: {\r\n          ...formInitialState.Wireless,\r\n        },\r\n        errors: {\r\n          ...state.errors,\r\n          Wireless: formInitialState.errors.Wireless,\r\n        },\r\n      };\r\n    }\r\n\r\n    if (key === \"enableKey\" && state.Wireless.enableKey) {\r\n      return {\r\n        ...state,\r\n        Wireless: {\r\n          ...state.Wireless,\r\n          enableKey: false,\r\n          securityKey: formInitialState.Wireless.securityKey,\r\n        },\r\n      };\r\n    }\r\n    return {\r\n      ...state,\r\n      [path]: {\r\n        ...state[path],\r\n        [key]: !state[path][key],\r\n      },\r\n    };\r\n  }\r\n\r\n  if (updatePath.length === 3 && (type === \"checkbox\" || type === \"radio\")) {\r\n    const [path, subPath, key] = updatePath;\r\n    if (!state[path][subPath][key]) {\r\n      return {\r\n        ...state,\r\n        [path]: {\r\n          ...state[path],\r\n          [subPath]: {\r\n            ...formInitialState[path][subPath],\r\n          },\r\n        },\r\n        errors: {\r\n          ...state.errors,\r\n          [path]: {\r\n            ...state.errors[path],\r\n            [subPath]: {},\r\n          },\r\n        },\r\n      };\r\n    }\r\n\r\n    return {\r\n      ...state,\r\n      [path]: {\r\n        ...state[path],\r\n        [subPath]: {\r\n          ...state[path][subPath],\r\n          [key]: !state[path][subPath][key],\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  if (updatePath.length === 2) {\r\n    const [path, key] = updatePath;\r\n    return {\r\n      ...state,\r\n      [path]: {\r\n        ...state[path],\r\n        [key]: value,\r\n      },\r\n    };\r\n  }\r\n  if (updatePath.length === 3) {\r\n    const [path, subPath, key] = updatePath;\r\n    return {\r\n      ...state,\r\n      [path]: {\r\n        ...state[path],\r\n        [subPath]: {\r\n          ...state[path][subPath],\r\n          [key]: value,\r\n        },\r\n      },\r\n      errors: {\r\n        ...state.errors,\r\n        [path]: {\r\n          ...state.errors[path],\r\n          [subPath]: {\r\n            ...state.errors[path][subPath],\r\n            [key]: ipValidation(value, key),\r\n          },\r\n        },\r\n      },\r\n    };\r\n  }\r\n  return formInitialState;\r\n};\r\n\r\nfunction Form() {\r\n  const [form, dispatchForm] = useReducer(formReducer, formInitialState);\r\n\r\n  const inputChangeHandler = useCallback(({ target }) => {\r\n    dispatchForm({\r\n      name: target.getAttribute(\"idx\"),\r\n      type: target.type,\r\n      value: target.value,\r\n    });\r\n  }, []);\r\n\r\n  let formIsValid = true;\r\n\r\n  const formCheckValidityHandler = (obj) => {\r\n    for (let key in obj) {\r\n      if (typeof obj[key] === \"string\") {\r\n        formIsValid = false;\r\n      }\r\n      if (typeof obj[key] === \"object\") formCheckValidityHandler(obj[key]);\r\n    }\r\n  };\r\n\r\n  formCheckValidityHandler(form.errors);\r\n  \r\n  const formSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    // if (!formIsValid) return;\r\n    dispatchForm({ type: \"SUBMIT\" });\r\n  };\r\n\r\n  const formCancelHandler = (event) => {\r\n    event.preventDefault();\r\n    dispatchForm({ type: \"CANCEL\" });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={formSubmitHandler} className={styles.form}>\r\n      <div className={styles[\"fieldset-container\"]}>\r\n        <Fieldset name=\"Ethernet\" onChange={inputChangeHandler} form={form} />\r\n        <Fieldset name=\"Wireless\" onChange={inputChangeHandler} form={form} />\r\n      </div>\r\n      <div className={styles.buttons}>\r\n        <Button\r\n          type=\"submit\"\r\n          disabled={!formIsValid}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Button type=\"cancel\" onClick={formCancelHandler}>\r\n          Cancel\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","export const ipValidation = (value, param) => {\r\n  const ipPattern = /^(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})$/;\r\n  let testIsValid = ipPattern.test(value);\r\n  let ipArray = value.split(\".\");\r\n  let key =\r\n    param === \"address\"\r\n      ? \" IP address\"\r\n      : param === \"subnetMask\"\r\n      ? \"Subnet Mask\"\r\n      : param === \"preferedServer\"\r\n      ? \"DNS server\"\r\n      : param === \"alternativeServer\"\r\n      ? \"DNS server\"\r\n      : null;\r\n  if (value.trim() === \"\")\r\n    return `Please, enter a${param === \"address\" ? \"n\" : null} ${key}.`;\r\n  if (!testIsValid) {\r\n    return `Invalid ${key}. Please, try again.`;\r\n  }\r\n  if (value === \"0.0.0.0\" || value === \"255.255.255.255\") {\r\n    return `This is a special ${key} and couldn't be used`;\r\n  } else {\r\n    for (let i = 0; i < 4; i++) {\r\n      if (ipArray[i] > 255 || ipArray[i] < 0) {\r\n        return `Invalid ${key}. Please, try again.`;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const updateErrors = (errors, group, subgroup, ...rest) => {\r\n  if (group === \"Wireless\") {\r\n    switch (true) {\r\n      case !subgroup.checked:\r\n        return {\r\n          ...errors,\r\n          Wirelessipaddress: null,\r\n          WirelessipsubnetMask: null,\r\n          WirelessdnsalternativeServer: null,\r\n          WirelessdnspreferedServer: \"\",\r\n        };\r\n      case \"ip\":\r\n        return {\r\n          ...errors,\r\n          Wirelessipaddress: null,\r\n          WirelessipsubnetMask: null,\r\n        };\r\n      case \"dns\":\r\n        return {\r\n          ...errors,\r\n          WirelessdnsalternativeServer: \"\",\r\n          WirelessdnspreferedServer: \"\",\r\n        };\r\n\r\n      default:\r\n        break;\r\n    }\r\n    return {\r\n      ...errors,\r\n    };\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nimport Form from './containers/Form'\r\n\r\nfunction App() {\r\n  return <Form />\r\n}\r\n\r\nexport default React.memo(App);\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}